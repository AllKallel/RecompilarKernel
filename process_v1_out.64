	.file	"process_v1.c"
	.text
	.section	.rodata
.LC0:
	.string	"Processo Filho: PID=%d, %d\n"
.LC1:
	.string	"ls"
.LC2:
	.string	"/bin/ls"
.LC3:
	.string	"Processo Pai: PID=%d, %d\n"
.LC4:
	.string	"Processo Filho (%d) terminou\n"
.LC5:
	.string	"Processo Pai terminou"
	.text
	.globl	main
	.type	main, @function
main:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	call	fork@PLT
	movl	%eax, -16(%rbp)
	cmpl	$0, -16(%rbp)
	jne	.L2
	call	getpid@PLT
	movl	%eax, %ecx
	movl	-16(%rbp), %eax
	movl	%eax, %edx
	movl	%ecx, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$5, %edi
	call	sleep@PLT
	movl	$0, %ecx
	leaq	.LC1(%rip), %rdx
	leaq	.LC1(%rip), %rsi
	leaq	.LC2(%rip), %rdi
	movl	$0, %eax
	call	execl@PLT
	jmp	.L3
.L2:
	cmpl	$0, -16(%rbp)
	jle	.L3
	call	getpid@PLT
	movl	%eax, %ecx
	movl	-16(%rbp), %eax
	movl	%eax, %edx
	movl	%ecx, %esi
	leaq	.LC3(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-20(%rbp), %rax
	movq	%rax, %rdi
	call	wait@PLT
	movl	%eax, -12(%rbp)
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC4(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	.LC5(%rip), %rdi
	call	puts@PLT
.L3:
	call	getchar@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rdx
	xorq	%fs:40, %rdx
	je	.L5
	call	__stack_chk_fail@PLT
.L5:
	leave
	ret
	.size	main, .-main
	.ident	"GCC: (Ubuntu 7.4.0-1ubuntu1~18.04) 7.4.0"
	.section	.note.GNU-stack,"",@progbits
